# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: artizen server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_BUCKET_NAME: artizen
  DEPLOY_APPLICATION_NAME : artizen

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name : Grant execute permission for gradlew
      run : chmod +x gradlew
      env :
        CI: "" #경고를 에러로 보이지않게함
      shell: bash
      
      
    - name: Build with Gradle
      run : ./gradlew clean build
      shell: bash
      
    - name: Make Directory
      run: mkdir -p deploy

    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy
      
    - name: Make zip file
      run: zip -r ./artizen.zip . 
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

    - name: Upload to AWS S3
      run: |
           aws deploy push \
           --application-name artizen \
           --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
           --ignore-hidden-files \
           --source .
      
    - name: Deploy to AWS EC2 from S3
      run: |
            aws deploy create-deployment \
            --application-name $DEPLOY_APPLICATION_NAME  \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --file-exists-behavior OVERWRITE 
            --deployment-group-name Artizen_group \
            --s3-location "bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip"

      
       # Deploy
#     - name: Code Deploy
#       run: aws deploy create-deployment --application-name "AWS CodeDeploy Application명" 
#         --deployment-config-name CodeDeployDefault.AllAtOnce --file-exists-behavior OVERWRITE 
#         --deployment-group-name "AWS 배포그룹명" --s3-location bucket="S3 버켓명",
#         bundleType=zip,key="압축파일명".zip

